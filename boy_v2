//case management
upsert("case_management", ["case_id", "reporting_period"],
    state => ({
        case_id: dataValue("form.case['@case_id']"),
        pax_group: dataValue('form.boy_demographics_information.pax_group') || "",
        group_name: dataValue('form.boy_group_details.group_name_new') || "",
        group_no: dataValue('form.boy_group_details.groupno') || "",
        reporting_period: dataValue('form.monthly_boy_reporting_information.report_period'),
        user_id: dataValue("form.case['@user_id']"),
        date_created: dataValue("form.case['@date_modified']"),
        date_modified: dataValue("form.case['@date_modified']"),
        linked_facility: dataValue('form.case.update.linked_facility'),
        the_county: dataValue('form.case.update.the_county'),
        the_cu_name: dataValue('form.case.update.the_cu_name'),
        the_location: dataValue('form.boy_group_details.the_location'),
        the_subcounty: dataValue('form.case.update.the_subcounty'),
        the_village: dataValue('form.case.update.the_village'),
        the_ward: dataValue('form.case.update.the_ward'),
//added on v2
        facilitated_by: dataValue('form.facilitated_by.facilitator'),
        username: dataValue('form.meta.username'),
        app_build_version: dataValue('form.meta.app_build_version'),
        submit_ip: dataValue('submit_ip'),
        
        originator: 'v2',//tracking the origin of the forwarder

    }),
    {
        setNull: "'undefined'",
        logValues: true,
    }
);
//2.boy_anthropometric_information
upsert("boy_anthropometric_information", ["case_id", "reporting_period"],
    state => ({
        date_created: dataValue("form.case['@date_modified']"),
        case_id: dataValue("form.case['@case_id']"),
        reporting_period: dataValue('form.monthly_boy_reporting_information.report_period'),
        bmi_calc: dataValue('form.boy_anthropometric_information.bmi_status_calc'),
        bmi_value: dataValue('form.boy_anthropometric_information.bmi_boyvalue') || 0,
        heightcm: dataValue('form.boy_anthropometric_information.boy_heightcm') || '0',
        weightkg: dataValue('form.boy_anthropometric_information.boy_weightkg') || '0',
        muacvalue: dataValue('form.boy_anthropometric_information.boy_muacvalue') || '0',
        muac_membr: dataValue('form.boy_anthropometric_information.muac_membr') || '',
        originator: 'v2',

    }),
    {
        setNull: "'undefined'",
        logValues: true,
    }
);

//3.boy_demographics_information
upsert("boy_demographics_information", ["case_id", "reporting_period"],
    state => ({
        date_created: dataValue("form.case['@date_modified']"),
        case_id: dataValue("form.case['@case_id']"),
        reporting_period: dataValue('form.monthly_boy_reporting_information.report_period'),

        HHID_hh: dataValue('form.boy_demographics_information.HHID_hh'),
        HHID_output: dataValue('form.boy_demographics_information.HHID_output'),
        age: dataValue('form.boy_demographics_information.age') || 0,
        socialstatus: dataValue('form.boy_demographics_information.boy_socialstatus'),
        participant_name: dataValue('form.boy_demographics_information.participant_name'),
        pax_group: dataValue('form.boy_demographics_information.pax_group'),
        sex: dataValue('form.boy_demographics_information.sex'),
        lactating: dataValue('form.boy_demographics_information.boy_lactating'),
        pregnant: dataValue('form.boy_demographics_information.boy_pregnant'),
        group_name: dataValue('form.boy_group_details.group_name_new'),
        hvchildren0to5m: dataValue("form.boy_demographics_information['hvchildren0to5m']"),
        hvchildren10to14yrs: dataValue("form.boy_demographics_information['hvchildren10to14yrs']"),
        hvchildren15to19yrs: dataValue("form.boy_demographics_information['hvchildren15to19yrs']"),
        hvchildren24to59m: dataValue("form.boy_demographics_information['hvchildren24to59m']"),
        hvchildren5to9yrs: dataValue("form.boy_demographics_information['hvchildren5to9yrs']"),
        hvchildren6to23m: dataValue("form.boy_demographics_information['hvchildren6to23m']"),


        no_male0to5m: dataValue('form.boy_demographics_information.no_male0to5m') || 0,
        no_female0to5m: dataValue('form.boy_demographics_information.no_female0to5m') || 0,
        no_male6to23m: dataValue('form.boy_demographics_information.no_male6to23m') || 0,
        no_female6to23m: dataValue('form.boy_demographics_information.no_female6to23m') || 0,
        no_male_24_59m: dataValue('form.boy_demographics_information.how_many_male_24_59m') || 0,
        no_female_24_59m: dataValue('form.boy_demographics_information.how_many_female_24_59m') || 0,
        no_male5to9yrs: dataValue('form.boy_demographics_information.no_male5to9yrs') || 0,
        no_female5to9yrs: dataValue('form.boy_demographics_information.no_female5to9yrs') || 0,
        no_male10to14yrs: dataValue('form.boy_demographics_information.no_male10to14yrs') || 0,
        no_female10to14yrs: dataValue('form.boy_demographics_information.no_female10to14yrs') || 0,
        no_male15to19yrs: dataValue('form.boy_demographics_information.no_male15to19yrs') || 0,
        no_female15to19yrs: dataValue('form.boy_demographics_information.no_female15to19yrs') || 0,
        new_group_type: dataValue('form.boy_demographics_information.new_group_type'),
        originator: 'v2',

    }),
    {
        setNull: "'undefined'",
        logValues: true,
    }
);

//4.boy_monthly_interventions
upsert("boy_monthly_interventions", ["case_id", "reporting_period"],
    state => ({
        date_created: dataValue("form.case['@date_modified']"),
        case_id: dataValue("form.case['@case_id']"),
        reporting_period: dataValue('form.monthly_boy_reporting_information.report_period'),
        grp_weekly_sessionscode: dataValue('form.boy_monthly_interventions.grp_weekly_sessionscode'),
        transition_pathway: dataValue('form.boy_monthly_interventions.transition_pathway'),

        interv_healthnutrition: dataValue('form.boy_monthly_interventions.interv_healthnutrition'),
        interv_referral: dataValue('form.boy_monthly_interventions.interv_referral'),
        interv_referrals: dataValue('form.boy_monthly_interventions.interv_referrals'),
        interv_socialservices: dataValue('form.boy_monthly_interventions.interv_socialservices'),
        resillient_livelihoods: dataValue('form.boy_monthly_interventions.resillient_livelihoods'),


        week1datetime: dataValue("form.boy_monthly_interventions['week1datetime']"),
        week2datetime: dataValue("form.boy_monthly_interventions['week2datetime']"),
        week3datetime: dataValue("form.boy_monthly_interventions['week3datetime']"),
        week4datetime: dataValue("form.boy_monthly_interventions['week4datetime']"),
        weekly_session_attended: dataValue('form.boy_monthly_interventions.weekly_session_attended'),

        moh_100_serial_number: dataValue('form.boy_monthly_interventions.moh_100community_refferal_form_serial_number') || '',
        moh_409_serial_number: dataValue('form.boy_monthly_interventions.moh_409_code_in_the_register') || '',


        originator: 'v2',

    }),
    {
        setNull: "'undefined'",
        logValues: true,
    }
);

//5.boy_sessions_information
upsert("boy_sessions_information", ["case_id", "reporting_period"],
    state => ({
        date_created: dataValue("form.case['@date_modified']"),
        case_id: dataValue("form.case['@case_id']"),
        reporting_period: dataValue('form.monthly_boy_reporting_information.report_period'),
        demonstration: dataValue('form.boy_sessions_information.demonstration'),
        products_distributed: dataValue('form.boy_sessions_information.products_distributed'),
        sources_of_serviceproduct:dataValue('form.boy_sessions_information.sources_of_serviceproduct_or_messageeducation.sources_of_serviceproduct_or_messageeducation_this_monthconfirm_from_source'),
        originator: 'v2',

    }),
    {
        setNull: "'undefined'",
        logValues: true,
    }
);

//other longitudinal data points
/*
1. facilitator
2. app build version
3. username
4. Submitting IP







*/
